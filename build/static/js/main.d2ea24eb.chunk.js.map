{"version":3,"sources":["Details.jsx","App.js","index.js"],"names":["Details","newCountry","isDarkMode","initial","React","useState","country","setCountry","history","useHistory","borders","counter","setCounter","i","push","filter","border","alpha3Code","length","num","className","onClick","goBack","id","style","marginRight","alignSelf","to","src","flag","alt","name","nativeName","population","toString","replace","region","subregion","capital","topLevelDomain","map","domain","join","currencies","currency","languages","lang","flat","b","App","countries","setCountries","setInitial","searchRef","useRef","selectRef","setIsDarkMode","detailQuery","setDetailQuery","handleGetCountries","a","axios","get","res","data","console","log","handleSearchChange","e","current","value","toLowerCase","includes","exact","path","action","type","ref","onChange","placeholder","size","label","disabled","selected","hidden","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ea24eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Details({ newCountry, isDarkMode, initial }) {\r\n  const [country, setCountry] = React.useState(newCountry);\r\n  let history = useHistory();\r\n  let borders = [];\r\n  const [counter, setCounter] = React.useState(1);\r\n\r\n  function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\r\n  }\r\n\r\n  for (let i = 0; i < country.borders.length; i++) {\r\n    borders.push(\r\n      initial.filter((border) => border.alpha3Code === country.borders[i])\r\n    );\r\n  }\r\n\r\n  const handleClick = (test) => {\r\n    setCountry(test);\r\n    setCounter(counter + 1);\r\n  };\r\n  const handleBack = () => {\r\n    for (let i = 0; i < counter; i++) {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <body className={isDarkMode && \"dark\"}>\r\n      <Router>\r\n        <div className=\"search-wrapper-details\">\r\n          <button\r\n            className={\"back-btn\"}\r\n            onClick={handleBack}\r\n            id={isDarkMode && \"dark-lighter\"}\r\n          >\r\n            <AiOutlineArrowLeft\r\n              style={{ marginRight: \"15px\", alignSelf: \"flex-end\" }}\r\n            />\r\n            Back\r\n          </button>\r\n        </div>\r\n        <Route to={`/${country.alpha3Code}`}>\r\n          <div className=\"details-wrapper\">\r\n            <img src={country.flag} alt={country.flag + \" flag\"} />\r\n\r\n            <div\r\n              className={isDarkMode ? \"details-right dark\" : \"details-right\"}\r\n            >\r\n              <h3>{country.name}</h3>\r\n              <div className=\"details-infos-wrapper\">\r\n                <ul className=\"no-deko\" id=\"ul1\">\r\n                  <li>\r\n                    <b>Native Name: </b>\r\n                    {country.nativeName}\r\n                  </li>\r\n                  <li>\r\n                    <b>Population: </b> {formatNumber(country.population)}\r\n                  </li>\r\n                  <li>\r\n                    <b>Region: </b>\r\n                    {country.region}\r\n                  </li>\r\n                  <li>\r\n                    <b>Sub Region: </b>\r\n                    {country.subregion}\r\n                  </li>\r\n                  <li>\r\n                    <b>Capital:</b>\r\n                    {country.capital}\r\n                  </li>\r\n                </ul>\r\n                <ul className=\"no-deko\">\r\n                  <li>\r\n                    <b>Top Level Domain:</b>{\" \"}\r\n                    {country.topLevelDomain.map((domain) => domain).join(\",\")}\r\n                  </li>\r\n                  <li>\r\n                    <b>Currenies: </b>\r\n                    {country.currencies\r\n                      .map((currency) => currency.name)\r\n                      .join(\",\")}\r\n                  </li>\r\n                  <li>\r\n                    <b>Languages: </b>\r\n                    {country.languages.map((lang) => lang.name).join(\",\")}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"border-countries-wrapper\">\r\n                <p>\r\n                  <b>Border Countries: </b>\r\n                </p>\r\n                <div className=\"border-countries\">\r\n                  {borders.flat().map((b) => (\r\n                    <Link to={`/${b.alpha3Code}`} className=\"no-deko\">\r\n                      <button\r\n                        className={\r\n                          isDarkMode ? \"border-btn dark-lighter\" : \"border-btn\"\r\n                        }\r\n                        id={isDarkMode && \"dark-lighter\"}\r\n                        onClick={() => handleClick(b)}\r\n                      >\r\n                        {b.name}\r\n                      </button>\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n      </Router>\r\n    </body>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { FcSearch } from \"react-icons/fc\";\nimport { FaMoon } from \"react-icons/fa\";\nimport Details from \"./Details\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [initial, setInitial] = useState([]);\n  const searchRef = React.useRef(\"\");\n  const selectRef = React.useRef(\"\");\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [detailQuery, setDetailQuery] = useState(\"\");\n\n  const handleGetCountries = async () => {\n    try {\n      const res = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n      setCountries(res.data);\n      setInitial(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    if (selectRef.current.value !== \"\") {\n      setCountries(\n        initial\n          .filter((country) => {\n            return country.name\n              .toLowerCase()\n              .includes(searchRef.current.value.toLowerCase());\n          })\n          .filter((country) => {\n            return country.region === selectRef.current.value;\n          })\n      );\n    } else {\n      setCountries(\n        initial.filter((country) => {\n          return country.name\n            .toLowerCase()\n            .includes(searchRef.current.value.toLowerCase());\n        })\n      );\n    }\n  };\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n  }\n\n  useState(() => {\n    handleGetCountries();\n  }, []);\n\n  return (\n    <>\n      <body className={isDarkMode && \"dark\"}>\n        <Router>\n          <header className={isDarkMode && \"dark-lighter\"}>\n            <Link to=\"/\" className=\"no-deko\">\n              <h1\n                className={isDarkMode && \"dark-lighter\"}\n                onClick={() => setCountries(initial)}\n              >\n                Where in the world?\n              </h1>\n            </Link>\n\n            <button\n              className={isDarkMode && \"dark-lighter\"}\n              onClick={() => setIsDarkMode(!isDarkMode)}\n            >\n              <FaMoon style={{ marginRight: \"15px\" }}></FaMoon>\n              Dark Mode\n            </button>\n          </header>\n          <Route exact path=\"/\">\n            <div\n              className={isDarkMode ? \"search-wrapper dark\" : \"search-wrapper\"}\n            >\n              <form action=\"\">\n                <input\n                  className={\n                    isDarkMode ? \"search-input dark-lighter\" : \"search-input\"\n                  }\n                  type=\"text\"\n                  ref={searchRef}\n                  onChange={handleSearchChange}\n                  placeholder={\"Search for a country...\"}\n                  value={\n                    searchRef.current != null ? searchRef.current.value : \"\"\n                  }\n                />\n                <FcSearch id=\"search-icon\" size=\"20px\" />\n              </form>\n              <form>\n                <select\n                  name=\"region\"\n                  className={isDarkMode ? \"select-input-dark\" : \"select-input\"}\n                  onChange={handleSearchChange}\n                  ref={selectRef}\n                  label=\"query\"\n                >\n                  <option\n                    className={isDarkMode && \"dark-lighter\"}\n                    value=\"\"\n                    disabled\n                    selected\n                    hidden\n                  >\n                    Filter by Region\n                  </option>\n                  <option className={isDarkMode && \"dark-lighter\"} value=\"\">\n                    no Filter\n                  </option>\n                  <option\n                    className={isDarkMode && \"dark-lighter\"}\n                    value=\"Europe\"\n                  >\n                    Europe\n                  </option>\n                  <option className={isDarkMode && \"dark-lighter\"} value=\"Asia\">\n                    Asia\n                  </option>\n                  <option\n                    className={isDarkMode && \"dark-lighter\"}\n                    value=\"Polar\"\n                  >\n                    Polar\n                  </option>\n                  <option\n                    className={isDarkMode && \"dark-lighter\"}\n                    value=\"Africa\"\n                  >\n                    Africa\n                  </option>\n                  <option\n                    className={isDarkMode && \"dark-lighter\"}\n                    value=\"Americas\"\n                  >\n                    Americas\n                  </option>\n                  <option\n                    className={isDarkMode && \"dark-lighter\"}\n                    value=\"Oceania\"\n                  >\n                    Oceania\n                  </option>\n                </select>\n              </form>\n            </div>\n            <main className={countries.length <= 3 && \"less-countries\"}>\n              {countries.map((country) => {\n                return (\n                  <Link to={`/${country.alpha3Code}`} className=\"no-deko\">\n                    <article\n                      onClick={() => setDetailQuery(country)}\n                      className={isDarkMode && \"dark-lighter\"}\n                    >\n                      <div className=\"img-wrapper\">\n                        <img src={country.flag} alt={country.name + \" flag\"} />\n                      </div>\n                      <div className=\"country-data\">\n                        <h3>{country.name}</h3>\n                        <p>\n                          Population:{\" \"}\n                          <span>{formatNumber(country.population)}</span>\n                        </p>\n                        <p>\n                          Region: <span>{country.region}</span>\n                        </p>\n                        <p>\n                          Capital: <span>{country.capital}</span>\n                        </p>\n                      </div>\n                    </article>\n                  </Link>\n                );\n              })}\n            </main>\n          </Route>\n          <Route path={`/${detailQuery.alpha3Code}`}>\n            <Details\n              newCountry={detailQuery}\n              isDarkMode={isDarkMode}\n              initial={initial}\n            />\n          </Route>\n        </Router>\n      </body>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}